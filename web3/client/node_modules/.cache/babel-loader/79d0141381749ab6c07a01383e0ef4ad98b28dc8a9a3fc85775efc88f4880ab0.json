{"ast":null,"code":"var _jsxFileName = \"D:\\\\web3\\\\client\\\\src\\\\contexts\\\\ContractContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ContractContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { contract_address } from '../config/contract';\nimport abi from '../config/abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractContext = /*#__PURE__*/createContext();\nexport const ContractProvider = ({\n  children\n}) => {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [balance, setBalance] = useState();\n  useEffect(() => {\n    const initializeContract = async () => {\n      const web3 = new Web3(Web3.givenProvider || 'http://127.0.0.1:7545');\n      if (window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          if (accounts && accounts.length > 0) {\n            setAccounts(accounts);\n            setAccount(accounts[0]);\n            const weiBalance = await web3.eth.getBalance(accounts[0]);\n            const etherBalance = web3.utils.fromWei(weiBalance, 'ether');\n            setBalance(etherBalance.slice(0, 8));\n            const contractInstance = new web3.eth.Contract(abi, contract_address);\n            setContract(contractInstance);\n          } else {\n            console.error('No accounts found');\n          }\n        } catch (error) {\n          console.error('Error fetching account balance:', error);\n        }\n      } else {\n        alert('Install MetaMask extension!');\n      }\n    };\n    initializeContract();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContractContext.Provider, {\n    value: {\n      contract,\n      account,\n      balance,\n      accounts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ContractProvider, \"vweidwhYKs8VJU1iqTEqjYlV0Gw=\");\n_c = ContractProvider;\nexport const useContract = () => {\n  _s2();\n  const context = useContext(ContractContext);\n  if (!context) {\n    throw new Error('useContract must be used within a ContractProvider');\n  }\n  return context;\n};\n_s2(useContract, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ContractProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Web3","contract_address","abi","jsxDEV","_jsxDEV","ContractContext","ContractProvider","children","_s","contract","setContract","account","setAccount","accounts","setAccounts","balance","setBalance","initializeContract","web3","givenProvider","window","ethereum","request","method","length","weiBalance","eth","getBalance","etherBalance","utils","fromWei","slice","contractInstance","Contract","console","error","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useContract","_s2","context","Error","$RefreshReg$"],"sources":["D:/web3/client/src/contexts/ContractContext.js"],"sourcesContent":["// ContractContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { contract_address } from '../config/contract';\r\nimport abi from '../config/abi.json';\r\n\r\nconst ContractContext = createContext();\r\n\r\nexport const ContractProvider = ({ children }) => {\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [balance, setBalance] = useState();\r\n\r\n  useEffect(() => {\r\n    const initializeContract = async () => {\r\n      const web3 = new Web3(Web3.givenProvider || 'http://127.0.0.1:7545');\r\n      if (window.ethereum) {\r\n        try {\r\n          const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n          if (accounts && accounts.length > 0) {\r\n            setAccounts(accounts);\r\n            setAccount(accounts[0]);\r\n  \r\n            const weiBalance = await web3.eth.getBalance(accounts[0]);\r\n            const etherBalance = web3.utils.fromWei(weiBalance, 'ether');\r\n            setBalance(etherBalance.slice(0, 8));\r\n\r\n            const contractInstance = new web3.eth.Contract(abi, contract_address);\r\n            setContract(contractInstance);\r\n          } else {\r\n            console.error('No accounts found');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching account balance:', error);\r\n        }\r\n      } else {\r\n        alert('Install MetaMask extension!');\r\n      }\r\n    };\r\n\r\n    initializeContract();\r\n  }, []);\r\n\r\n  return (\r\n    <ContractContext.Provider value={{ contract, account, balance, accounts }}>\r\n      {children}\r\n    </ContractContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useContract = () => {\r\n  const context = useContext(ContractContext);\r\n  if (!context) {\r\n    throw new Error('useContract must be used within a ContractProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,eAAe,gBAAGT,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMU,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMkB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,IAAI,GAAG,IAAIlB,IAAI,CAACA,IAAI,CAACmB,aAAa,IAAI,uBAAuB,CAAC;MACpE,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,IAAI;UACF,MAAMR,QAAQ,GAAG,MAAMO,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;UACjF,IAAIV,QAAQ,IAAIA,QAAQ,CAACW,MAAM,GAAG,CAAC,EAAE;YACnCV,WAAW,CAACD,QAAQ,CAAC;YACrBD,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEvB,MAAMY,UAAU,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAACC,UAAU,CAACd,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzD,MAAMe,YAAY,GAAGV,IAAI,CAACW,KAAK,CAACC,OAAO,CAACL,UAAU,EAAE,OAAO,CAAC;YAC5DT,UAAU,CAACY,YAAY,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEpC,MAAMC,gBAAgB,GAAG,IAAId,IAAI,CAACQ,GAAG,CAACO,QAAQ,CAAC/B,GAAG,EAAED,gBAAgB,CAAC;YACrES,WAAW,CAACsB,gBAAgB,CAAC;UAC/B,CAAC,MAAM;YACLE,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;UACpC;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACzD;MACF,CAAC,MAAM;QACLC,KAAK,CAAC,6BAA6B,CAAC;MACtC;IACF,CAAC;IAEDnB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAACC,eAAe,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAE7B,QAAQ;MAAEE,OAAO;MAAEI,OAAO;MAAEF;IAAS,CAAE;IAAAN,QAAA,EACvEA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAClC,EAAA,CAzCWF,gBAAgB;AAAAqC,EAAA,GAAhBrC,gBAAgB;AA2C7B,OAAO,MAAMsC,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGjD,UAAU,CAACQ,eAAe,CAAC;EAC3C,IAAI,CAACyC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}